name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GODOT_VERSION: "4.5"
  GODOT_VERSION_FULL: "4.5.0"
  SCONS_CACHE_LIMIT: 7168

jobs:
  # Build and test on Linux only
  build-and-test-linux:
    runs-on: ubuntu-latest
    name: Build and Test (Linux x86_64)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential scons pkg-config libdbus-1-dev \
            libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev \
            libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev \
            libxi-dev libxrandr-dev

      - name: Setup godot-cpp cache
        id: cache-godot-cpp
        uses: actions/cache@v4
        with:
          path: |
            godot-cpp/bin/
            godot-cpp/gen/
            godot-cpp/.sconsign.dblite
          key: ${{ runner.os }}-godot-cpp-${{ hashFiles('godot-cpp/**') }}
          restore-keys: |
            ${{ runner.os }}-godot-cpp-

      - name: Build godot-cpp
        if: steps.cache-godot-cpp.outputs.cache-hit != 'true'
        run: |
          cd godot-cpp
          scons platform=linux target=template_release generate_bindings=yes -j$(nproc)
          cd ..

      - name: Build GDExtension
        run: |
          scons platform=linux target=template_release -j$(nproc)

      - name: Verify build output
        run: |
          ls -lh addons/godot-media-keys/bin/
          file addons/godot-media-keys/bin/libmedia_keys.so

      - name: Install Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: ${{ env.GODOT_VERSION_FULL }}
          use-dotnet: false
          include-templates: false

      - name: Install GUT
        run: |
          git clone https://github.com/bitwes/Gut.git gut_temp
          mv gut_temp/addons/gut addons/
          rm -rf gut_temp

      - name: Import project
        run: |
          timeout 60 godot --headless --import --quit || true

      - name: Run GUT tests
        run: |
          godot --headless -s addons/gut/gut_cmdln.gd -gdir=res://test/unit -gexit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            .gut/
            *.log
          retention-days: 7

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: libmedia_keys-linux-x86_64
          path: addons/godot-media-keys/bin/libmedia_keys.so
          retention-days: 7
